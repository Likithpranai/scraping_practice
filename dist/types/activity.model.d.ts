/**
 * @file Defines the core data structure for an Activity or Event entity.
 */
import { TagTypeCategory, TagBudgetCategory, TagGroupCategory } from './common.model';
/**
 * The primary interface for an Activity object.
 */
export interface Activity {
    /**
     * The primary, English-language name of the activity or event.
     * @example "Cheung Chau Bun Festival"
     */
    name: string;
    /**
     * The name of the activity in its local language.
     * @example "長洲太平清醮包山節"
     */
    local_name: string;
    /**
     * The type of entity. Can be 'events'| 'local activities'
     * If it is an attraction, make the name into an action so it can be classified as a local activity.
     * The difference between 'events' and 'local activities' is that events are typically one-time or seasonal occurrences, while local activities can be ongoing or regular happenings.
     * @example "events"
     */
    type: 'events' | 'local activities';
    /**
     * The location or primary venue of the activity.
     * @example "Cheung Chau Bun Festival, Pak Tai Temple, Cheung Chau, Hong Kong"
     */
    address: string;
    /**
     * The specific neighborhood or district where the activity takes place.
     * @example "Cheung Chau"
     */
    neighborhood: string;
    /**
     * The dates of the event, stored as an array of string to show all dates the event is happening.
     * Even if the event is holding on every day within a period, it should be stored as an array of each day.
     * This allows for flexibility in representing both single-day and multi-day events.
     * This is only used for events, not local activities.
     * @example ["2024-05-01", "2024-05-02", "2024-05-03"]
     */
    dates?: string[];
    /**
     * A mapping of specific dates to available time slots for the activity.
     * The key is the date in "YYYY-MM-DD" format, and the value is an array of time ranges in "HH:mm-HH:mm" format.
     * @example { "2024-05-01": ["08:00-12:00", "14:00-20:00"], "2024-05-02": ["10:00-18:00"] }
     */
    dateAndTime?: Record<string, string[]>;
    /**
     * The duration of the activity in minutes.
     * @example 90
     */
    duration?: number;
    /**
     * A detailed, descriptive text generated by an LLM, suitable for semantic search.
     * @example "A vibrant island festival featuring the iconic Bun Scrambling Competition..."
     */
    text_embedding: string;
    /**
     * Actionable tips and insider advice for visitors.
     * @example "Take the early morning ferry from Central to avoid long queues."
     */
    local_tips: string;
    /**
     * An object scoring the activity against various experience types.
     */
    tags_type: Record<TagTypeCategory, number>;
    /**
     * An object classifying the activity's price range.
     */
    tags_budget: Record<TagBudgetCategory, number>;
    /**
     * The price of the activity in local currency (e.g., HKD).
     * @example 120
     */
    price?: number;
    /**
     * An object scoring the activity's suitability for different social groups.
     */
    tags_group: Record<TagGroupCategory, number>;
    /**
   * An optional URL for booking or more information about the activity.
   * @example "https://www.example.com/cheung-chau-bun-festival"
   */
    booking_link?: string;
    /**
     * A short, concise summary description of the activity.
     * @example "A vibrant island festival featuring the iconic Bun Scrambling Competition..."
     */
    description: string;
}
export declare const ActivityJSONSchema = "\n{\n  \"name\": \"string\",\n  \"local_name\": \"string\",\n  \"type\": \"events|local activities\",\n  \"address\": \"string\",\n  \"neighborhood\": \"string\",\n  \"dates\": [\"string (e.g. '2024-05-01')\"],\n  \"closing_days_of_week\": [\"string (e.g. 'Sunday')\"],\n  \"closing_dates\": [\"string (e.g. '2024-01-01')\"],\n  \"duration\": \"number (in minutes)\",\n  \"hidden_gem_score\": \"number (0-100)\",\n  \"text_embedding\": \"string\",\n  \"local_tips\": \"string\",\n  \"tags_type\": {\n    \"Food\": \"number (0-100)\",\n    \"Art & Culture\": \"number (0-100)\",\n    \"History\": \"number (0-100)\",\n    \"Nature\": \"number (0-100)\",\n    \"Leisure\": \"number (0-100)\",\n    \"Adventure\": \"number (0-100)\",\n    \"Shopping\": \"number (0-100)\",\n    \"Entertainment\": \"number (0-100)\",\n    \"Photography\": \"number (0-100)\",\n    \"Sports\": \"number (0-100)\",\n    \"Hidden Gems\": \"number (0-100)\",\n    \"Wellness\": \"number (0-100)\",\n    \"Nightlife\": \"number (0-100)\",\n    \"Educational\": \"number (0-100)\"\n  },\n  \"tags_budget\": {\n    \"Free\": \"number (0 or 1)\",\n    \"Budget friendly\": \"number (0 or 1)\",\n    \"Moderately priced\": \"number (0 or 1)\",\n    \"High-end\": \"number (0 or 1)\",\n    \"Luxury\": \"number (0 or 1)\"\n  },\n  \"tags_group\": {\n    \"Date\": \"number (0-100)\",\n    \"Friends\": \"number (0-100)\",\n    \"Family\": \"number (0-100)\",\n    \"Colleagues\": \"number (0-100)\",\n    \"Business\": \"number (0-100)\"\n  },\n  \"recognition\": {\n    \"string (source name e.g. 'UNESCO')\": {\n      \"source\": \"string (e.g. 'UNESCO')\",\n      \"text\": \"string (e.g. 'Intangible Cultural Heritage of Humanity')\",\n      \"url\": \"string | null\"\n    }\n  },\n  \"booking_link\": \"string\",\n  \"description\": \"string\"\n}\n";
export declare const ActivityDefinitions = "\nexport interface Activity {\n  /**\n   * The primary, English-language name of the activity or event.\n   * @example \"Cheung Chau Bun Festival\"\n   */\n  name: string;\n\n  /**\n   * The name of the activity in its local language.\n   * @example \"\u9577\u6D32\u592A\u5E73\u6E05\u91AE\u5305\u5C71\u7BC0\"\n   */\n  local_name: string;\n\n  /**\n   * The type of entity. Can be 'events'| 'local activities'\n   * If it is an attraction, make the name into an action so it can be classified as a local activity.\n   * The difference between 'events' and 'local activities' is that events are typically one-time or seasonal occurrences, while local activities can be ongoing or regular happenings.\n   * @example \"events\"\n   */\n  type: 'events' | 'local activities';\n\n  /**\n   * The location or primary venue of the activity.\n   * @example \"Cheung Chau Bun Festival, Pak Tai Temple, Cheung Chau, Hong Kong\"\n   */\n  address: string;\n\n  /**\n   * The specific neighborhood or district where the activity takes place.\n   * @example \"Cheung Chau\"\n   */\n  neighborhood: string;\n\n  /**\n   * The dates of the event, stored as an array of string to show all dates the event is happening.\n   * Even if the event is holding on every day within a period, it should be stored as an array of each day.\n   * This allows for flexibility in representing both single-day and multi-day events.\n   * This is only used for events, not local activities.\n   * @example [\"2024-05-01\", \"2024-05-02\", \"2024-05-03\"]\n   */\n\tdates?: string[];\n\t\n\n\t/**\n\t * An array of days of the week when the local activity is not available.\n\t * This is for representing both regular closing days.\n\t * @example [\"Sunday\", \"Monday\"]\n\t */\n\tclosing_days_of_week?: string[];\n\n\t/**\n\t * An array of specific dates when the local activity is not available.\n\t * This is for representing special closures.\n\t * This is only used for local activities, not events.\n\t * @example [\"2024-01-01\", \"2024-02-10\"]\n\t */\n\tclosing_dates?: string[];\n\n\t/**\n\t * The duration of the activity in minutes.\n\t * @example 90\n\t */\n\tduration?: number;\n\n  /**\n   * A calculated score (0-100) indicating how much of a \"hidden gem\" this activity is.\n   * @example 35\n   */\n  hidden_gem_score: number;\n\n  /**\n   * A detailed, descriptive text generated by an LLM, suitable for semantic search.\n   * @example \"A vibrant island festival featuring the iconic Bun Scrambling Competition...\"\n   */\n  text_embedding: string;\n\n  /**\n   * Actionable tips and insider advice for visitors.\n   * @example \"Take the early morning ferry from Central to avoid long queues.\"\n   */\n  local_tips: string;\n\n  /**\n   * An object scoring the activity against various experience types.\n   */\n  tags_type: Record<TagTypeCategory, number>;\n\n  /**\n   * An object classifying the activity's price range.\n   */\n  tags_budget: Record<TagBudgetCategory, number>;\n\n  /**\n   * An object scoring the activity's suitability for different social groups.\n   */\n  tags_group: Record<TagGroupCategory, number>;\n\n  /**\n   * A collection of awards, accolades, or notable mentions from various sources.\n   * The key is the source (e.g., \"UNESCO\"), and the value is a `RecognitionDetail` object.\n   */\n\trecognition: Record<string, RecognitionDetail>;\n\t\n\t/**\n   * An optional URL for booking or more information about the activity.\n   * @example \"https://www.example.com/cheung-chau-bun-festival\"\n   */\n  booking_link?: string;\n\n  /**\n   * A short, concise summary description of the activity.\n   * @example \"A vibrant island festival featuring the iconic Bun Scrambling Competition...\"\n   */\n  description: string;\n}\n";
//# sourceMappingURL=activity.model.d.ts.map